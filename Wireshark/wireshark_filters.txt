

Resolve IP addresses:
-------------------------------------------------------------------------------
https://osqa-ask.wireshark.org/questions/37680/can-wireshark-automatically-resolve-the-ip-address-into-host-names

Edit -> Preferences -> Name Resolution

You can also 'Use an external name resolver' to resolve the IP addresses using your DNS when you open the trace file.


Sort by conversations:
-------------------------------------------------------------------------------
https://osqa-ask.wireshark.org/questions/4164/building-display-filter-using-conversations

Simplify your filter to "tcp.flags == 0x02". This will show you the initial SYN of each conversation. (TCP 3-way Handshake. SYN,SYN-ACK,ACK)

tcp.flags == 0x02


Logical expressions:
-------------------------------------------------------------------------------
https://www.wireshark.org/docs/man-pages/wireshark-filter.html

Tests can be combined using logical expressions. These too are expressible in C-like syntax or with English-like abbreviations:
    and, &&   Logical AND
    or,  ||   Logical OR
    not, !    Logical NOT

Expressions can be grouped by parentheses as well. The following are all valid display filter expressions:
    tcp.port == 80 and ip.src == 192.168.2.1
    not llc
    http and frame[100-199] contains "wireshark"
    (ipx.src.net == 0xbad && ipx.src.node == 0.0.0.0.0.1) || ip



Filter out certain conversations:
-------------------------------------------------------------------------------
https://null-byte.wonderhowto.com/news/8-wireshark-filters-every-wiretapper-uses-spy-web-conversations-and-surfing-habits-0134508/

ip.addr ==x.x.x.x && ip.addr ==x.x.x.x

Sets a conversation filter between the two IP addresses.


https://thetechl33t.com/2015/06/01/wireshark-not-equal-to-filter/

To filter out a certain IP address, the !- statment is deprecated. Instead use this:

!ip.addr == 192.168.0.1

To filter out multiple IP addresses, use:

!ip.addr == 192.168.0.1 && !ip.addr == pi.hole
!ip.addr == 192.168.0.1 && !ip.host == pi.hole


https://osqa-ask.wireshark.org/questions/22230/filter-for-partial-ip-address

To filter for public hostnames, use:

ip.host contains netflix
ip.host contains netflix
ip.host contains netflix || ip.host contains nflxext.com






Wireshark can only decrypt RSA, and only if the private key is known:
-------------------------------------------------------------------------------
https://blog.packet-foo.com/2016/07/how-to-use-wireshark-to-steal-passwords/

Other reading:
https://www.comparitech.com/net-admin/decrypt-ssl-with-wireshark/#Wireshark_makes_decrypting_SSL_traffic_easy








